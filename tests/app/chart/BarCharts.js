'use client'
import { useEffect, useState } from "react"
import EmptyPlaceholder from "../../components/EmptyPlaceholder"
import useOptions from "./useOptions"

import ReportChart from "../../components/ReportChart"

function BarChartsBody({loading,options}){

  if (loading){
    return (
      <section style={{height:"600px"}}>
        <dv4-loader-timer>Loading chart...</dv4-loader-timer>
      </section>
    )
  }

  if (options?.series?.length > 0){
    return (
      <ReportChart
        className="hc-chart-section"
        options={options}
      />
    )
  }

  return <EmptyPlaceholder />
}


export default function BarCharts({dbList=[]}){
  const [selected, setSelected] = useState()
  const {loading,options} = useOptions(selected?.file)

  // console.group("BarChart")
  // console.log("loading...", loading)
  // console.log("options...", options)
  // console.groupEnd()

  useEffect(()=>{
    if (dbList?.length > 0){
      // const sel = imageList[0]
      setSelected(dbList[0])
    }
  },[dbList])


  return (
    <>
      <h2 style={{
        display:"flex",
        justifyContent: "space-between"
      }}>
        Benchmark results
        <select
          style={{
            padding:'0.5rem',
            marginBottom:'1rem'
          }}
          onChange={({target})=>{
            const item = dbList[parseInt(target.value)]
            setSelected(item)
          }}
        >
          {dbList.map((item,pos)=><option key={item.file} value={pos}>{item.file}</option>)}
        </select>
      </h2>
      <BarChartsBody
        loading={loading}
        options={options}
      />
      <p>
        An simple table otput is available <a href={`/table/${selected?.file}`} target="_new">here</a>.
        All data generated by autocannon can be extracted <a href={`/api/report/${selected?.file}`} target="_new">from here</a>. Autocannon provides more stats but I choose to focus on
        the amount of handled requests because it is the most important
        metric for me.
      </p>
    </>
  )
}